plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'org.nowstart'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.0.4'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.1'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.0.4'
    runtimeOnly 'com.h2database:h2:2.1.214'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.0.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.4'
    testImplementation 'org.springframework.security:spring-security-test:6.0.2'

    // mapstruct 추가
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'org.projectlombok:lombok:1.18.26'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // swagger 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    // QueryDls 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
